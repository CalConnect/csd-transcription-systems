#!/usr/bin/env bash

outdir="${outdir:-documents}"

declare -a failures=()
declare total_test_num=0
declare pass_test_num=0
declare fail_test_num=0

test_existence_of_auth_code() {
	local authcode="$1"
	run_test grep "${authcode}"- "${outdir}"/iso-24229.html
}

run_test() {
	local -a cmd=("$@")
	"$@" >/dev/null
	local rv=$?

	((++total_test_num))

	local test_raw_name="${FUNCNAME[1]}"
	local test_name="${test_raw_name#test_}"
	test_name="${test_name//_/ }"

	if [[ $rv = 0 ]]
	then
		((++pass_test_num))
		printf '\e[32m.\e[m'
	else
		((++fail_test_num))
		failures+=("${test_name}:::${cmd[@]}")
		printf '\e[31mF\e[m'
	fi
	return $rv
}

print_summary() {
	echo
	echo === Summary ===
	for failed_test in "${failures[@]}"
	do
		local test_name="${failed_test%:::*}"
		local test_cmd="${failed_test#*:::}"
		printf "\e[1mFailure:\e[22m\n"
		printf "   \e[31m%s\e[m\n" "${test_name}"
		printf "   \e[31mCommand: %s\e[m\n" "${test_cmd}"
	done
	echo
	printf 'Total: %s test(s), %s passed, %s failed\n' "${total_test_num}" "${pass_test_num}" "${fail_test_num}"
}

trap print_summary EXIT

return_status() {
	! (( fail_test_num ))
}

main() {
	test_existence_of_auth_code sfs
	return_status
}

main "$@"
